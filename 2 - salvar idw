' ==============================
' iLogic - Atualizando Vistas e Massa
' ==============================

' üîπ Verifica se o documento ativo √© um desenho (.idw)
If ThisApplication.ActiveDocumentType <> DocumentTypeEnum.kDrawingDocumentObject Then
    MessageBox.Show("Abra um desenho (.idw) antes de rodar esta regra.", "Erro")
    Return
End If

Dim oDoc As DrawingDocument = ThisApplication.ActiveDocument

' üîπ Verifica se o desenho possui folhas e vistas
If oDoc.Sheets.Count = 0 OrElse oDoc.Sheets(1).DrawingViews.Count = 0 Then
    MessageBox.Show("O desenho n√£o possui folhas ou vistas v√°lidas.", "Erro")
    Return
End If

' üîπ Conta todas as vistas do desenho
Dim totalViews As Integer = 0
For Each oSheet As Sheet In oDoc.Sheets
    totalViews += oSheet.DrawingViews.Count
Next

' üîπ Etapas do processo: salvar inicial + atualizar vistas + atualizar massa + atualizar data + salvar final
Dim totalSteps As Integer = totalViews + 4
Dim currentStep As Integer = 1

' üîπ Criar barra de progresso
Dim oProgressBar As Inventor.ProgressBar
Dim progressTitle As String = "iLogic - Atualizando Vistas e Massa"
Dim progressMsg As String = "Etapa "

oProgressBar = ThisApplication.CreateProgressBar(False, totalSteps, progressTitle)
oProgressBar.Message = progressMsg & currentStep & " de " & totalSteps
oProgressBar.UpdateProgress

' ======================
' Etapa 1: salvar documento antes de come√ßar
' ======================
oDoc.Save2(True)
currentStep += 1
oProgressBar.Message = progressMsg & currentStep & " de " & totalSteps
oProgressBar.UpdateProgress

' ======================
' Etapa 2: atualizar todas as vistas para modo preciso
' ======================
Dim erroVistas As New List(Of String)

For Each oSheet As Sheet In oDoc.Sheets
	
	oSheet.Activate() ' Ativa visualmente a folha
	
    For Each oView As DrawingView In oSheet.DrawingViews
        Try
            oView.IsRasterView = False ' for√ßa modo preciso
            oDoc.Update2(True)         ' for√ßa atualiza√ß√£o do documento ap√≥s alterar a vista
        Catch ex As Exception
            erroVistas.Add("Folha: " & oSheet.Name & ", Vista: " & oView.Name & " - " & ex.Message)
        End Try

        currentStep += 1
        oProgressBar.Message = progressMsg & currentStep & " de " & totalSteps
        oProgressBar.UpdateProgress
    Next
Next

' ======================
' Etapa 3: atualizar propriedades de massa (primeiro modelo referenciado)
' ======================
Try
    Dim oFirstSheet As Sheet = oDoc.Sheets(1)
    Dim oFirstView As DrawingView = oFirstSheet.DrawingViews(1)
    Dim oRefDocDesc As DocumentDescriptor = oFirstView.ReferencedDocumentDescriptor

    If oRefDocDesc IsNot Nothing AndAlso oRefDocDesc.ReferencedDocument IsNot Nothing Then
        Dim oModelDoc As Document = oRefDocDesc.ReferencedDocument

        ' üîπ Trata pe√ßas
        If TypeOf oModelDoc Is PartDocument Then
            Dim oPartDoc As PartDocument = CType(oModelDoc, PartDocument)
            Dim oDef As PartComponentDefinition = oPartDoc.ComponentDefinition

            If oDef.MassProperties.MassOverridden Then
                oDef.MassProperties.MassOverridden = False
            End If

            oPartDoc.Update2(True)
            oDef.UpdatePhysicalProperties()

            Dim massaReal As Double = oDef.MassProperties.Mass
            iProperties.Value(oModelDoc.DisplayName, "Physical", "Mass") = massaReal

        ' üîπ Trata montagens
        ElseIf TypeOf oModelDoc Is AssemblyDocument Then
            Dim oAsmDoc As AssemblyDocument = CType(oModelDoc, AssemblyDocument)
            oAsmDoc.Update2(True)

            Dim oDef As AssemblyComponentDefinition = oAsmDoc.ComponentDefinition
            If oDef.MassProperties.MassOverridden Then
                oDef.MassProperties.MassOverridden = False
            End If

            Dim massaReal As Double = oDef.MassProperties.Mass
            ' N√£o h√° necessidade de acessar a iProperty "Physical" diretamente
            ' Adicione ou atualize qualquer iProperty aqui, se necess√°rio, por exemplo:
            ' iProperties.Value(oModelDoc.DisplayName, "Physical", "Mass") = massaReal

        Else
            erroVistas.Add("‚ùå O modelo referenciado n√£o √© uma pe√ßa nem montagem v√°lida.")
        End If

    Else
        erroVistas.Add("‚ùå N√£o foi poss√≠vel acessar o modelo da primeira vista da primeira folha.")
    End If

Catch ex As Exception
    erroVistas.Add("‚ùå Erro ao atualizar propriedades de massa: " & ex.Message)
End Try

currentStep += 1
oProgressBar.Message = progressMsg & currentStep & " de " & totalSteps
oProgressBar.UpdateProgress

' ======================
' Etapa 4: atualizar data de cria√ß√£o
' ======================
Try
    iProperties.Value("Project", "Creation Date") = Now
Catch ex As Exception
    erroVistas.Add("‚ùå Erro ao atualizar iProperty 'Creation Date': " & ex.Message)
End Try

currentStep += 1
oProgressBar.Message = progressMsg & currentStep & " de " & totalSteps
oProgressBar.UpdateProgress

' ======================
' Etapa 5: atualizar documento e salvar final
' ======================
oDoc.Update2(True)
oDoc.Save2(True)

currentStep += 1
oProgressBar.Message = progressMsg & currentStep & " de " & totalSteps
oProgressBar.UpdateProgress

' ======================
' Finalizar barra de progresso
' ======================
oProgressBar.Close()

' ======================
' Mensagem final
' ======================
If erroVistas.Count > 0 Then
    Dim erroMsg As String = "‚ö† Algumas vistas ou opera√ß√µes n√£o foram conclu√≠das com sucesso:" & vbCrLf & vbCrLf
    For Each erro In erroVistas
        erroMsg &= erro & vbCrLf
    Next
    MessageBox.Show(erroMsg, "Processo Conclu√≠do com Avisos", MessageBoxButtons.OK, MessageBoxIcon.Warning)
Else
    MessageBox.Show("‚úÖ Todas as vistas foram atualizadas, massa recalculada e documento salvo com sucesso.", _
                    "Processo Conclu√≠do", MessageBoxButtons.OK, MessageBoxIcon.Information)
End If
